@import "../../../styles.scss";

.form {
  margin-top: 2.5rem;
  margin-inline: auto;
  display: grid;
  gap: 1.5rem;
  max-width: 32.625rem;

  @media (min-width: $tablet) {
    margin-top: 2.875rem;
  }

  @media (min-width: $desktop) {
    max-width: 28.75rem;
  }

  &-input {
    display: grid;
    gap: 0.75rem;

    &__label {
      color: $clr-neutral-0;
    }

    &__field {
      width: 100%;
      color: $clr-neutral-0;
      padding: 1rem;
      background-color: rgba(255, 255, 255, 0.08);
      border: 1px solid $clr-neutral-500;
      border-radius: 12px;
      backdrop-filter: blur(2px);
      transition: background-color 300ms, box-shadow 300ms, border-color 300ms;

      &::placeholder {
        color: $clr-neutral-300;
      }

      &:hover {
        background-color: rgba(255, 255, 255, 0.2);
      }

      &:focus {
        box-shadow: 0 0 0 3px $clr-neutral-900, 0 0 0 6px $clr-neutral-500;
      }

      &.ng-invalid.ng-touched {
        border-color: $clr-orange-500;

        & + .form-input__hint {
          color: $clr-orange-500;

          path {
            stroke: $clr-orange-500;
          }
        }
      }
    }

    &__hint {
      color: $clr-neutral-300;
      position: relative;
      display: flex;
      align-items: center;
      gap: 0.5rem;
      transition: color 300ms;

      path {
        transition: stroke 300ms;
      }
    }
  }

  &-uploader {
    input {
      position: absolute;
      inset: 0;
      opacity: 0;
      cursor: pointer;
    }

    &__field {
      position: relative;
      display: grid;
      gap: 1rem;
      justify-items: center;
      padding: 1.25rem 1rem;

      background-color: rgba(255, 255, 255, 0.08);
      backdrop-filter: blur(2px);

      border: 1px dashed $clr-neutral-500;
      border-radius: 12px;

      transition: background-color 300ms, box-shadow 300ms;

      &:not(.uploader__field--loaded):hover {
        background-color: rgba(255, 255, 255, 0.2);
      }

      &:focus-within {
        box-shadow: 0 0 0 3px $clr-neutral-900, 0 0 0 6px $clr-neutral-500;
      }

      &:has(input.ng-invalid.ng-touched) {
        & + .form-input__hint {
          color: $clr-orange-500;

          path {
            stroke: $clr-orange-500;
          }
        }
      }

      &--loaded {
        input {
          pointer-events: none;
        }
      }

      &-icon {
        width: 50px;
        aspect-ratio: 1/1;
        background-color: rgba(255, 255, 255, 0.1);
        border-radius: 12px;
        border: 1px solid $clr-neutral-700;
        display: grid;
        place-items: center;
        overflow: hidden;
      }

      &-text {
        color: $clr-neutral-300;
      }

      &-actions {
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      &-action {
        position: relative;
        padding: 0.25rem 0.5rem;
        background-color: rgba(255, 255, 255, 0.1);
        border-radius: 4px;
        color: $clr-neutral-0;
        cursor: pointer;
        transition: color 300ms;

        &:hover,
        &:focus {
          color: $clr-neutral-300;

          span::after {
            opacity: 1;
          }
        }

        span {
          position: relative;

          &::after {
            content: "";
            position: absolute;
            width: 100%;
            height: 1px;
            bottom: 0;
            left: 0;
            background-color: $clr-neutral-300;
            opacity: 0;
            transition: opacity 300ms;
          }
        }
      }
    }
  }

  &-button {
    font-weight: $fw-extra-bold;
    color: $clr-neutral-900;
    background-color: $clr-orange-500;
    padding: 1rem;
    border-radius: 12px;
    cursor: pointer;

    transition: background-color 300ms, box-shadow 300ms;

    &:hover {
      background-color: $clr-orange-700;
      box-shadow: 0px 4px 0px 0px $clr-orange-500;
    }

    &:focus {
      box-shadow: 0 0 0 3px $clr-neutral-900, 0 0 0 6px $clr-neutral-500;
    }
  }
}
